;; "
;; #include \"GaucheAdapter_glue.h\"
;; "

(.include "GaucheAdapter_glue.h")

(define-type <tws-client> "GaucheAdapter*" "tws-client"
  "TWS_CLIENT_P" "TWS_CLIENT_UNBOX" "TWS_CLIENT_BOX")

(define-cproc make-tws-client () ::<tws-client>
  (expr "new GaucheAdapter()"))

(define-cproc tws-client-connect (cl::<tws-client> host::<const-cstring> port::<int> id::<int>)
  ::<boolean>
  (expr "cl->connect(host, port, id)"))

(define-cproc tws-client-connected? (cl::<tws-client>)
  ::<boolean>
  (expr "cl->isConnected()"))

(define-cproc tws-client-process-messages (cl::<tws-client>)
  ::<void>
  (body "cl->processMessages();"))

(define-cproc tws-client-historical-data-request (cl::<tws-client>
                                                  reqId::<int>
                                                  symbol::<const-cstring>
                                                  secType::<const-cstring>
                                                  currency::<const-cstring>
                                                  exchange::<const-cstring>
                                                  queryTime::<const-cstring>
                                                  duration::<const-cstring>
                                                  barSize::<const-cstring>
                                                  whatToShow::<const-cstring>)
  ::<void>
  (body "cl->historicalDataRequests(reqId, symbol, secType, currency, exchange, queryTime, duration, barSize, whatToShow);"))

(define-cproc tws-client-place-fx-market-order (cl::<tws-client>
                                                orderId::<int>
                                                symbol::<const-cstring>
                                                secType::<const-cstring>
                                                currency::<const-cstring>
                                                exchange::<const-cstring>
                                                action::<const-cstring>
                                                quantity::<double>
                                                )
  ::<void>
  (body "cl->placeFxMarketOrder(orderId, symbol, secType, currency, exchange, action, quantity);"))

(define-cproc tws-client-request-current-time (cl::<tws-client>)
  ::<void>
  (body "cl->requestCurrentTime();"))

;;;;;;;;;;;;;;;;;

(define-type <tws-contract> "Contract*" "tws-contract"
  "TWS_CONTRACT_P" "TWS_CONTRACT_UNBOX" "TWS_CONTRACT_BOX")

(define-cproc make-tws-contract (symbol::<const-cstring>
                                 secType::<const-cstring>
                                 currency::<const-cstring>
                                 exchange::<const-cstring>)
  ::<tws-contract>
  "Contract *contract = new Contract();"
  "contract->symbol = symbol;"
  "contract->secType = secType;"
  "contract->currency = currency;"
  "contract->exchange = exchange;"
  (expr "contract"))

;;;;;;;;;;;;;;;;;

(define-type <tws-order> "Order*" "tws-order"
  "TWS_ORDER_P" "TWS_ORDER_UNBOX" "TWS_ORDER_BOX")

(define-cproc make-tws-order (action::<const-cstring>
                              orderType::<const-cstring>
                              quantity::<double>
                              lmtPrice::<double>
                              auxPrice::<double>
                              parentId::<int>)
  ::<tws-order>
  "Order *order = new Order();"
  "order->action = action;"
  "order->orderType = orderType;"
  "order->totalQuantity = quantity;"
  "order->lmtPrice = lmtPrice;"
  "order->auxPrice = auxPrice;"
  "order->parentId = parentId;"
  (expr "order"))

;;;;;;;;;;

(define-cproc tws-client-place-order (cl::<tws-client>
                                      orderId::<int>
                                      contract::<tws-contract>
                                      order::<tws-order>)
  ::<void>
  (body "cl->placeOrder(orderId, contract, order);"))


;; Local Variables:
;; mode: scheme
;; End:
